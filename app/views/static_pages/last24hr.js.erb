function handleRefresh1()
{
	var url ="http://meteo.ozzyboshi.com:8888/WeatherStation/MeteoServices/Readings/last24HReadings/updateMeteoReadings?filtro=34";
	var newScriptElement = document.createElement("script");
	newScriptElement.setAttribute("src",url);
	newScriptElement.setAttribute("id","jsonp");
			
	var oldScriptElement = document.getElementById("jsonp");
	var head = document.getElementsByTagName("head")[0];
	if (oldScriptElement == null) {
		head.appendChild(newScriptElement);
	}
	else
	{
		head.replaceChild(newScriptElement, oldScriptElement);	
	}
}

var last=0.0;
var lastmin=0.0;
var lastmax=0.0;
var chart_vento_medio;
function updateMeteo(sales) {

}

function updateMeteoReadings(sales) {
	//var array1 = new Array();
	var array = new Array();
	var arrayumidita = new Array();
	var arrayvento = new Array();
	var arraypressione = new Array();

	chart.series[0].setData([]);
	//chartumidita.series[0].setData([]);
	//chartvento.series[0].setData([]);
	//chartpressione.series[0].setData([]);

		for (var i=0;i<sales.length;i++)
		{
			var anno=sales[i].data.substring(0,4);
			var mese=sales[i].data.substring(5,7);
			var giorno=sales[i].data.substring(8,10);
			var ora=sales[i].data.substring(11,13);
			var minuti=sales[i].data.substring(14,16);
			
			array[i]=[Date.UTC(anno,mese-1,giorno,ora,minuti),eval(sales[i].temperatura_esterna)];
			//arrayumidita[i]=[Date.UTC(anno,mese-1,giorno,ora,minuti),eval(sales[i].umidita_esterna)];
			//arrayvento[i]=[Date.UTC(anno,mese-1,giorno,ora,minuti),eval(sales[i].vento_medio)];
			//arraypressione[i]=[Date.UTC(anno,mese-1,giorno,ora,minuti),eval(sales[i].pressione)];
		}
		chart.series[0].setData(array,true);
		//chartumidita.series[0].setData(arrayumidita,true);
		//chartvento.series[0].setData(arrayvento,true);
		//chartpressione.series[0].setData(arraypressione,true);
	}

	
        $(document).ready(function () {
        
		//updateLinks();
		handleRefresh1();
		setInterval(function () {handleRefresh1()}, 30000);

		

            var theme = getDemoTheme(),
                majorTicks = { size: '15%', interval: 10 },
                minorTicks = { size: '5%', interval: 2.5, style: { 'stroke-width': 1, stroke: '#aaaaaa'} },
                labels = { interval: 10 };

	    
	    chart = new Highcharts.Chart({
	     chart: {
	        renderTo: 'gauge',
	        type: 'spline',
		zoomType: 'x',
	        spacingRight: 20,

	     },
	     title: {
	        text: 'Temperatura ultime 24 ore'
	     },
	     xAxis: {
	        type: 'datetime',

	     },
	     yAxis: {
	        minPadding: 0.2,
	            
	            title: {
	                text: 'Temperatura (c°)',
	            
	            }
	     },
	     tooltip: {
	                shared: true,
					xDateFormat: '%d/%m/%Y %H:%M:%S' 
	            },
	      legend: {
	                enabled: false
	            },
	     plotOptions: {
	                area: {   
	                    fillColor: {
	                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
	                        stops: [
	                            [0, "#FF0000"],
	                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
	                        ]
	                    },   
	                    lineWidth: 1,
	                    marker: {
	                        enabled: false
	                    },
	                    shadow: false,
	                    states: {
	                        hover: {
	                            lineWidth: 1
	                        }
	                    },   
	                    threshold: null
	                }
	            },
	     series: [{
		 type: 'area',
		 name: 'Temperatura in gradi centigradi',
		   pointInterval: 24 * 3600 * 1000,
	        data: [],
	     }]
	  });

	  chartumidita = new Highcharts.Chart({
	     chart: {
	        renderTo: 'gaugeumidita',
	        type: 'spline',
		zoomType: 'x',
	        spacingRight: 20,

	     },
	     title: {
	        text: 'Umidita ultime 24 ore'
	     },
	     xAxis: {
	        type: 'datetime',

	     },
	     yAxis: {
	        minPadding: 0.2,
	            
	            title: {
	                text: 'Temperatura (c°)',
	            
	            }
	     },
	     tooltip: {
	                shared: true,
					xDateFormat: '%d/%m/%Y %H:%M:%S' 
	            },
	      legend: {
	                enabled: false
	            },
	     plotOptions: {
	                area: {   
	                    fillColor: {
	                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
	                        stops: [
	                            [0, "#FF0000"],
	                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
	                        ]
	                    },   
	                    lineWidth: 1,
	                    marker: {
	                        enabled: false
	                    },
	                    shadow: false,
	                    states: {
	                        hover: {
	                            lineWidth: 1
	                        }
	                    },   
	                    threshold: null
	                }
	            },
	     series: [{
		 type: 'area',
		 name: 'Umidita in percentuale',
		   pointInterval: 24 * 3600 * 1000,
	        data: [],
	     }]
	  });

	chartvento = new Highcharts.Chart({
	     chart: {
	        renderTo: 'gaugevento',
	        type: 'spline',
		zoomType: 'x',
	        spacingRight: 20,

	     },
	     title: {
	        text: 'Vento ultime 24 ore'
	     },
	     xAxis: {
	        type: 'datetime',

	     },
	     yAxis: {
	        minPadding: 0.2,
	            
	            title: {
	                text: 'Vento (km/h)',
	            
	            }
	     },
	     tooltip: {
	                shared: true,
					xDateFormat: '%d/%m/%Y %H:%M:%S' 
	            },
	      legend: {
	                enabled: false
	            },
	     plotOptions: {
	                area: {   
	                    fillColor: {
	                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
	                        stops: [
	                            [0, "#FF0000"],
	                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
	                        ]
	                    },   
	                    lineWidth: 1,
	                    marker: {
	                        enabled: false
	                    },
	                    shadow: false,
	                    states: {
	                        hover: {
	                            lineWidth: 1
	                        }
	                    },   
	                    threshold: null
	                }
	            },
	     series: [{
		 type: 'area',
		 name: 'Vento',
		   pointInterval: 24 * 3600 * 1000,
	        data: [],
	     }]
	  });

	  chartpressione = new Highcharts.Chart({
	     chart: {
	        renderTo: 'gaugepressione',
	        type: 'spline',
		zoomType: 'x',
	        spacingRight: 20,

	     },
	     title: {
	        text: 'Pressione ultime 24 ore'
	     },
	     xAxis: {
	        type: 'datetime',

	     },
	     yAxis: {
	        minPadding: 0.2,
	            
	            title: {
	                text: 'Pressione (hPa)',
	            
	            }
	     },
	     tooltip: {
	                shared: true,
					xDateFormat: '%d/%m/%Y %H:%M:%S' 
	            },
	      legend: {
	                enabled: false
	            },
	     plotOptions: {
	                area: {   
	                    fillColor: {
	                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
	                        stops: [
	                            [0, "#FF0000"],
	                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
	                        ]
	                    },   
	                    lineWidth: 1,
	                    marker: {
	                        enabled: false
	                    },
	                    shadow: false,
	                    states: {
	                        hover: {
	                            lineWidth: 1
	                        }
	                    },   
	                    threshold: null
	                }
	            },
	     series: [{
		 type: 'area',
		 name: 'Pressione in hPA',
		   pointInterval: 24 * 3600 * 1000,
	        data: [],
	     }]
	  });
	  
	  handleRefresh1();
	  setInterval(handleRefresh1, 60000);

        });
