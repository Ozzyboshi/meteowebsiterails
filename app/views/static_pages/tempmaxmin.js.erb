$(document).ready(function () {

	// Inizio funzione per swatch beat time
	Date.prototype.getSwatch = function() 
	{
		var swatch = ((this.getUTCHours() + 1)%24) + this.getUTCMinutes()/60 + this.getUTCSeconds()/3600;
		return Math.floor(swatch*1000/24);
	}

	print_termometro($('#termometromax'));
	print_termometro($('#termometromin'));

	print_termometro($('#termometromaxint'));
	print_termometro($('#termometrominint'));

	var urlmax="http://"+"<%= ws_host() %>"+":"+"<%= ws_port() %>"+"/WeatherStation/MeteoServices/Readings/lastMaxReading/updateMeteoMax";
	var urlmin="http://"+"<%= ws_host() %>"+":"+"<%= ws_port() %>"+"/WeatherStation/MeteoServices/Readings/lastMinReading/updateMeteoMin";
	
	handleRefresh(urlmax,"jsonpmax");
	setInterval(function () {handleRefresh(urlmax)}, 30000);

	handleRefresh(urlmin,"jsonpmin");
	setInterval(function () {handleRefresh(urlmin)}, 30000);

	$(".animsition").animsition(
	{
  
	    inClass               :   'fade-in',
	    outClass              :   'fade-out',
	    inDuration            :    1500,
	    outDuration           :    800,
	    linkElement           :   '.animsition-link',
	    loading               :    true,
	    loadingParentElement  :   'body',
	    loadingClass          :   'animsition-loading',
	    unSupportCss          : [ 'animation-duration',
	                              '-webkit-animation-duration',
	                              '-o-animation-duration'
	                            ],
	    overlay               :   false,
	    overlayClass          :   'animsition-overlay-slide',
	    overlayParentElement  :   'body'
	}
	);
		
});

function handleRefresh(url,componentID) 
{
	var newScriptElement = document.createElement("script");
	newScriptElement.setAttribute("src",url);
	newScriptElement.setAttribute("id",componentID);

	var oldScriptElement = document.getElementById(componentID);
	var head = document.getElementsByTagName("head")[0];
	if (oldScriptElement == null)
		head.appendChild(newScriptElement);
	else{
		head.replaceChild(newScriptElement, oldScriptElement);	
	}
}
function convert_to_F(celsius)
{
	return Math.round(celsius * 9 / 5 + 32);
}

function printTermData(selectorBase,data)
{
	var date = new Date(String(sales[0].data).replace(" ","T")+"Z");
	var selectorDesc=selectorBase+"desc";
	var selectorDescSwatch=selectorBase+"descswatch";

	$(selectorDesc).text(data*1+" ° ("+convert_to_F(data*1)+" °F) registrata alle "+date.toString());
	$(selectorDescSwatch).text("Swatch internet beat time : @"+date.getSwatch()+" .beats");
	$(selectorBase).jqxLinearGauge('animationDuration', 1000);
	$(selectorBase).jqxLinearGauge('value',data);
}

function updateMeteoMax(sales) 
{
	printTermData("#termometromax",sales[0].temperatura_esterna*1);
	printTermData("#termometromaxint",sales[0].temperatura_interna*1)
}

function updateMeteoMin(sales) 
{
	printTermData("#termometromin",sales[0].temperatura_esterna*1);
	printTermData("#termometrominint",sales[0].temperatura_interna*1)
}

function print_termometro(divobjectselector)
{
	var theme = getDemoTheme(),
				majorTicks = { size: '15%', interval: 10 },
				minorTicks = { size: '5%', interval: 2.5, style: { 'stroke-width': 1, stroke: '#aaaaaa'} },
				labels = { interval: 10 };
				
	divobjectselector.jqxLinearGauge({
				orientation: 'vertical',
				labels: labels,
				ticksMajor: majorTicks,
				ticksMinor: minorTicks,
				max: 60,
				value: -60,
				pointer: { size: '6%', style: { fill: '#FF0000'} },
				colorScheme: 'scheme05',
	});
	divobjectselector.jqxLinearGauge({ pointer: { pointerType: 'default', size: '5%', visible: true, offset: -5,style: { fill: '#FF0000'}}});
	divobjectselector.jqxLinearGauge({height: 250 });
	divobjectselector.jqxLinearGauge({width: 100 })
	divobjectselector.jqxLinearGauge({min: -10 });
}