$( document ).ready(
	function () {
		$( "#datepicker" ).datepicker();
		$( "#datepicker" ).datepicker( "option", "dateFormat", "yy-mm-dd" );
		$(".animsition").animsition(
		{
			inClass			:	'fade-in',
			outClass		:	'fade-out',
			inDuration		:	1500,
			outDuration		:	800,
			linkElement		:	'.animsition-link',
			loading			:	true,
			loadingParentElement	:	'body', //animsition wrapper element
			loadingClass			:	'animsition-loading',
			unSupportCss			: [ 'animation-duration','-webkit-animation-duration','-o-animation-duration'],

			overlay					:	false,
			overlayClass			:	'animsition-overlay-slide',
			overlayParentElement  :   'body'
		});
		handleRefresh("http://meteo.ozzyboshi.com:8888/WeatherStation/MeteoServices/Readings/readingsByDay/updateMeteoReadings?date="+getQueryDate()+"&filtro=318","jsonp1");
		handleRefresh("http://meteo.ozzyboshi.com:8888/WeatherStation/MeteoServices/Readings/LastRainfallsAndAvgTemp/updateMeteoRainfalls?days=10&datelength=13&timeunit=2&period="+getQueryDate(),"jsonp2");
		
		var theme = getDemoTheme(),
			majorTicks = { size: '15%', interval: 10 },
			minorTicks = { size: '5%', interval: 2.5, style: { 'stroke-width': 1, stroke: '#aaaaaa'} },
			labels = { interval: 10 };

		temperaturechart = new Highcharts.Chart({
			chart: {
				renderTo: 'gauge',
				type: 'spline',
				zoomType: 'x',
				spacingRight: 20,
			},
			title: {
				text: ''
			},
			xAxis: {
				type: 'datetime',
			},
			yAxis: {
				minPadding: 0.2,
				title: {
					text: 'Gradi (Celsius)',
				}
			},
			tooltip: {
				shared: true,
				xDateFormat: '%d/%m/%Y %H:%M:%S' 
			},
			legend: {
				enabled: false
			},
			plotOptions: {
			area: {   
				fillColor: {
					linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
					stops: [
								[0, "#FF0000"],
								[1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
							]
					},
					lineWidth: 1,
					marker: {
						enabled: false
					},
					shadow: false,
					states: {
						hover: {
								lineWidth: 1
							}
						},
						threshold: null
					}
				},
				series: [
					{
						type: 'area',
						name: 'Temperatura esterna',
						pointInterval: 24 * 3600 * 1000,
						data: [],
					},
					{
						type: 'line',
						name: 'Temperatura Interna',
						pointInterval: 24 * 3600 * 1000,
						data: [],
						lineWidth: 2,
						marker: { fillColor: '#A5B7CD', radius: 10 },
						color: '#A5B7CD',
					}
				]
		});
		
		umiditachart = new Highcharts.Chart({
			chart: {
				renderTo: 'gaugeumidita',
				type: 'spline',
				zoomType: 'x',
				spacingRight: 20,
			},
			title: {
				text: ''
			},
			xAxis: {
				type: 'datetime',
			},
			yAxis: {
				minPadding: 0.2,
				title: {
					text: 'Umidita (%)',
				}
			},
			tooltip: {
				shared: true,
				xDateFormat: '%d/%m/%Y %H:%M:%S' 
			},
			legend: {
				enabled: false
			},
			plotOptions: {
			area: {   
				fillColor: {
					linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
					stops: [
								[0, "#FF0000"],
								[1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
							]
					},
					lineWidth: 1,
					marker: {
						enabled: false
					},
					shadow: false,
					states: {
						hover: {
								lineWidth: 1
							}
						},
						threshold: null
					}
				},
				series: [
					{
						type: 'area',
						name: 'Umidita esterna',
						pointInterval: 24 * 3600 * 1000,
						data: [],
					},
					{
						type: 'line',
						name: 'Umidita Interna',
						pointInterval: 24 * 3600 * 1000,
						data: [],
						lineWidth: 2,
						marker: { fillColor: '#A5B7CD', radius: 10 },
						color: '#A5B7CD',
					}
				]
		});
		
		pressionechart = new Highcharts.Chart({
			chart: {
				renderTo: 'gaugepressione',
				type: 'spline',
				zoomType: 'x',
				spacingRight: 20,
			},
			title: {
				text: ''
			},
			xAxis: {
				type: 'datetime',
			},
			yAxis: {
				minPadding: 0.2,
				title: {
					text: 'Umidita (%)',
				}
			},
			tooltip: {
				shared: true,
				xDateFormat: '%d/%m/%Y %H:%M:%S' 
			},
			legend: {
				enabled: false
			},
			plotOptions: {
			area: {   
				fillColor: {
					linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
					stops: [
								[0, "#FF0000"],
								[1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(10).get('rgba')]
							]
					},
					lineWidth: 1,
					marker: {
						enabled: false
					},
					shadow: false,
					states: {
						hover: {
								lineWidth: 1
							}
						},
						threshold: null
					}
				},
				series: [
					{
						type: 'area',
						name: 'Umidita esterna',
						pointInterval: 24 * 3600 * 1000,
						data: []
					}
				]
		});
		
		var chart;
		$(function () {
			precipitazionichart = new Highcharts.Chart({
				chart: {
					renderTo: 'container',
					zoomType: 'xy'
				},
				title: {
					text: 'Precipitazioni vs Temperatura Media ripartita per ora'
				},
				yAxis: [{ // Primary yAxis
					labels: {
						format: '{value} °C',
						style: {
							color: Highcharts.getOptions().colors[1]
						}
					},
					title: {
						text: 'Temperature',
						style: {
							color: Highcharts.getOptions().colors[1]
						}
					}
				}, { // Secondary yAxis
					title: {
						text: 'Rainfall',
						style: {
							color: Highcharts.getOptions().colors[0]
						}
					},
					labels: {
						format: '{value} mm',
						style: {
							color: Highcharts.getOptions().colors[0]
						}
					},
					opposite: true
				}],

				tooltip: {
					shared: true
				},
				series: [{
					name: 'Precipitazioni',
					type: 'column',
					yAxis: 1,
					tooltip: {
						pointFormat: '<span style="font-weight: bold; color: {series.color}">{series.name}</span>: <b>{point.y:.1f} mm</b> '
					}
				}, {
					name: 'Temperatura media',
					type: 'spline',
					tooltip: {
						pointFormat: '<span style="font-weight: bold; color: {series.color}">{series.name}</span>: <b>{point.y:.1f}°C</b> '
					}
				}]
			});
		});	
	}
);
$( "#datepicker" ).change(
	function () {
		waitingDialog.show();
		handleRefresh("http://meteo.ozzyboshi.com:8888/WeatherStation/MeteoServices/Readings/readingsByDay/updateMeteoReadings?date="+getQueryDate()+"&filtro=318","jsonp1");
		handleRefresh("http://meteo.ozzyboshi.com:8888/WeatherStation/MeteoServices/Readings/LastRainfallsAndAvgTemp/updateMeteoRainfalls?days=10&datelength=13&timeunit=2&period="+getQueryDate(),"jsonp2");
	}
);

function handleRefresh(url,tagname)
{
	//var url ="http://meteo.ozzyboshi.com:8888/WeatherStation/MeteoServices/Readings/readingsByDay/updateMeteoReadings?date="+getQueryDate()+"&filtro=318";
	var newScriptElement = document.createElement("script");
	newScriptElement.setAttribute("src",url);
	newScriptElement.setAttribute("id",tagname);
			
	var oldScriptElement = document.getElementById(tagname);
	var head = document.getElementsByTagName("head")[0];
	if (oldScriptElement == null) {
		head.appendChild(newScriptElement);
	}
	else
	{
		head.replaceChild(newScriptElement, oldScriptElement);
	}
}


function updateMeteoReadings(letture) 
{
	var array = new Array();
	var array2 = new Array();
	var array3 = new Array();
	var array4 = new Array();
	var array5 = new Array();
	temperaturechart.series[0].setData([]);
	temperaturechart.series[1].setData([]);
	umiditachart.series[0].setData([]);
	umiditachart.series[1].setData([]);
	pressionechart.series[0].setData([]);
	var date;
	var newDate;
	temperaturechart.setTitle({text: "Temperatura per il giorno "+getQueryDate()});
	umiditachart.setTitle({text: "Umidità per il giorno "+getQueryDate()});
	pressionechart.setTitle({text: "Pressione per il giorno "+getQueryDate()});
	for (var i=0;i<letture.length;i++)
	{		
		date = new Date(String(letture[i].data).replace(" ","T")+"Z");
		array[i]=[date.getTime()+(date.getTimezoneOffset()*-1)*60*1000,eval(letture[i].temperatura_esterna)];
		array2[i]=[date.getTime()+(date.getTimezoneOffset()*-1)*60*1000,eval(letture[i].temperatura_interna)];
		array3[i]=[date.getTime()+(date.getTimezoneOffset()*-1)*60*1000,eval(letture[i].umidita_esterna)];
		array4[i]=[date.getTime()+(date.getTimezoneOffset()*-1)*60*1000,eval(letture[i].umidita_interna)];
		array5[i]=[date.getTime()+(date.getTimezoneOffset()*-1)*60*1000,eval(letture[i].pressione)];
	}
	temperaturechart.series[0].setData(array,true);
	temperaturechart.series[1].setData(array2,true);
	umiditachart.series[0].setData(array3,true);
	umiditachart.series[1].setData(array4,true);
	pressionechart.series[0].setData(array5,true);
	waitingDialog.hide();
}
function updateMeteoRainfalls(letture)
{
	var array = new Array();
	var array2 = new Array();
	var array3 = new Array();
	precipitazionichart.series[0].setData([]);
	precipitazionichart.series[1].setData([]);
	for (var i=0;i<letture.length;i++)
	{
		var date = new Date(String(letture[i].data).replace(" ","T")+"Z");
		array[i]=letture[i].data;
		array2[i]=eval(letture[i].pioggia);
		array3[i]=eval(letture[i].temp_esterna_media);
	}
	
	precipitazionichart.xAxis[0].setCategories(array.reverse(),true);
	precipitazionichart.series[0].setData(array2.reverse(),true);
	precipitazionichart.series[1].setData(array3.reverse(),true);
}

function getQueryDate()
{
	var datapicker=$("#datepicker").val();
	if (datapicker=="")
		datapicker=new Date().toISOString().substring(0,10);
	return datapicker;
}
